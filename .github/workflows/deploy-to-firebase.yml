# ​Here’s a step-by-step guide to configure the GitHub Actions workflow for deploying your app to Firebase Hosting when a commit is pushed to the "frontend" branch.

# ### Step 1: Create Your Firebase Project

# 1. **Go to Firebase Console**:
#    - Visit [Firebase Console](https://console.firebase.google.com/).

# 2. **Create a New Project**:
#    - Click on "Add project" and follow the prompts to create a new Firebase project.
#    - Note down the project ID (e.g., `learn-git-action`).

# ### Step 2: Set Up Firebase Hosting

# 1. **Initialize Firebase in Your Project**:
#    - Open your terminal and navigate to your project directory.
#    - Run the command:
#      ```bash
#      firebase init hosting
#      ```
#    - Follow the prompts to set up Firebase Hosting, selecting your newly created project.

# ### Step 3: Generate Firebase Token

# 1. **Install Firebase CLI**:
#    - If you haven't already, install Firebase CLI globally:
#      ```bash
#      npm install -g firebase-tools
#      ```

# 2. **Login to Firebase**:
#    - Run the command:
#      ```bash
#      firebase login
#      ```

# 3. **Generate a Token**:
#    - After logging in, generate a token with:
#      ```bash
#      firebase login:ci
#      ```
#    - Copy the generated token; you will need it for GitHub Secrets.

# ### Step 4: Add Firebase Token to GitHub Secrets

# 1. **Go to Your GitHub Repository**:
#    - Navigate to your repository on GitHub.

# 2. **Access Settings**:
#    - Click on the "Settings" tab.

# 3. **Add a New Secret**:
#    - In the left sidebar, click on "Secrets and variables" > "Actions".
#    - Click on "New repository secret".
#    - Name the secret `FIREBASE_TOKEN` and paste the token you copied earlier.

# ### Step 5: Create the GitHub Actions Workflow

# 1. **Create a Workflow File**:
#    - In your project repository, create a directory called `.github/workflows`.
#    - Inside this directory, create a file named `deploy-to-firebase.yml`.

# 2. **Add the Workflow Configuration**:
#    - Copy and paste the following YAML configuration into `deploy-to-firebase.yml`:

name: Build and Deploy to Firebase Hosting

on:
  push:
    branches:
      - 'frontend'  # Trigger on pushes to the frontend branch

env:
  FIREBASE_PROJECT_ID: 'learn-git-action'  # Replace with your Firebase project ID
  FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}  # Store your Firebase token in GitHub Secrets

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies and build
        working-directory: frontend
        run: |
          npm install --legacy-peer-deps
          npm run build  # Adjust this command based on your build process

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy to Firebase Hosting
        working-directory: frontend
        run: |
          firebase target:apply hosting app learn-git-action
          firebase deploy --project ${{ env.FIREBASE_PROJECT_ID }} --token ${{ secrets.FIREBASE_TOKEN }} --only hosting
